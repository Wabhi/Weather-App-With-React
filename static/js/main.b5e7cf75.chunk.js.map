{"version":3,"sources":["Components/WeatherReport.js","Components/WeatherInput.js","App.js","reportWebVitals.js","index.js"],"names":["minMaxTemp","min","max","className","WeatherReport","props","css","cityName","countryName","weatherIcon","temp_celcius","temp_min","temp_max","description","humidity","style","color","error","role","WeatherInput","onSubmit","loadData","type","name","placeholder","autoComplete","App","convertCelcius","temp","Math","floor","convertIcon","icons","idRange","setState","icon","Thunderstrom","Drizzle","Rain","Snow","Atmosphere","Clouds","Clear","fetchApi","event","a","preventDefault","city","target","elements","value","country","axios","api_call","response","data","console","log","sys","celsius","main","weather","id","state","this","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b5e7cf75.chunk.js","sourcesContent":["import React from 'react'\r\nimport \"./Weather.css\"\r\nconst WeatherReport = (props) => {\r\n    return (\r\n        <div className=\"container text-light\">\r\n            {props.css ?\r\n                < div className=\"Card_css\">\r\n            {props.cityName ? (<h1 className=\"text-white py-1\">{props.cityName},{props.countryName}</h1>) : null}\r\n            <h5 className=\"py-4\"><i className={`wi ${props.weatherIcon} display-1`}></i></h5>\r\n            {props.temp_celcius ? (<h1 className=\"py-2\">{props.temp_celcius}&deg;</h1>) : null}\r\n            {\r\n                minMaxTemp(props.temp_min, props.temp_max)\r\n            }\r\n            <h3 className=\"py-3\">{props.description}</h3>\r\n            {props.humidity ? (<h3 className=\"py-3\" style={{ color: \"#32a856\" }}>Humidity : {props.humidity}&#x25;</h3>) : null}\r\n            {/* <h3 className=\"py-3\">{props.humidity}&#x25;</h3> */}\r\n        </div>\r\n                :\r\n         < div className=\"Card pt-3\">\r\n                {props.cityName ? (<h1 className=\"text-white py-1\">{props.cityName},{props.countryName}</h1>) : null}\r\n                <h5 className=\"py-4\"><i className={`wi ${props.weatherIcon} display-1`}></i></h5>\r\n                {props.temp_celcius ? (<h1 className=\"py-2\">{props.temp_celcius}&deg;</h1>) : null}\r\n                {\r\n                    minMaxTemp(props.temp_min, props.temp_max)\r\n                }\r\n                <h3 className=\"py-3\">{props.description}</h3>\r\n                {props.humidity ? (<h3 className=\"py-3\" style={{ color: \"#32a856\" }}>Humidity : {props.humidity}&#x25;</h3>) : null}\r\n                {/* <h3 className=\"py-3\">{props.humidity}&#x25;</h3> */}\r\n         </div>\r\n        }\r\n    </div>\r\n    )\r\n}\r\nconst minMaxTemp = (min, max) => {\r\n    if (min && max) {\r\n        return (\r\n            <h3>\r\n                <span className=\"px-4\">{min}&deg;</span>\r\n                <span className=\"px-4\">{max}&deg;</span>\r\n            </h3>\r\n        )\r\n    }\r\n   \r\n}\r\n\r\nexport default WeatherReport;\r\n","import React from 'react'\r\nimport \"./WeatherInput.css\"\r\n\r\nconst WeatherInput = (props) => {\r\n    return (\r\n        <div className=\"container h-100\">\r\n            <div>{props.error ? error() : null}</div>\r\n            <form onSubmit={props.loadData}>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-3 offset-md-2\" >\r\n                    <input type=\"text\" name=\"city\" className=\"form-control\" placeholder=\"Enter your city name\" autoComplete=\"off\"/>\r\n                </div>\r\n                <div className=\"col-md-3\">\r\n                    <input type=\"text\" name=\"country\" className=\"form-control\" placeholder=\"Enter your country name\" autoComplete=\"off\"/>\r\n                </div>\r\n                <div className=\"col-md-3 py-0 mt-md-0 text-md-left\">\r\n                    <button>Get Weather</button>\r\n                </div>\r\n            </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\nconst error = () => {\r\n    return (\r\n        <div className=\"alert alert-danger mx-5\" role=\"alert\">\r\n            Please Enter Your City Name and Country Name.\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WeatherInput;\r\n","import React, { Component } from 'react'\nimport WeatherReport from \"./Components/WeatherReport\";\nimport WeatherInput from \"./Components/WeatherInput\";\nimport './App.css';\nimport \"weather-icons/css/weather-icons.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport axios from \"axios\";\n\n\nconst APIkey= \"c003aa64b9a766de1448e7ce1f6e1a63\"\nclass App extends Component {\n  //here defined the state whatever we need..................\n  constructor() {\n    super()\n    this.state = {\n      cityName:null,\n      countryName: null,\n      icon: null,\n      main: null,\n      celsius: null,\n      temp_max: null,\n      temp_min: null,\n      description: \"\",\n      humidity:null,\n      error: false,\n      css:false\n     \n    }\n    //here i defined wether icon state...........................\n    this.weatherIcon = {\n      Thunderstrom: \"wi-thunderstrom\",\n      Drizzle: \"wi-sleet\",\n      Rain: \"wi-strom-showers\",\n      Snow: \"wi-snow\",\n      Atmosphere: \"wi-fog\",\n      Clear: \"wi-day-sunny\",\n      Clouds:\"wi-day-fog\"\n      \n    }\n  }\n  //here I covert temp from kelvin to celcius......................\n  convertCelcius = (temp)=>{\n    let celsius = Math.floor(temp - 273.15)\n    return celsius\n  }\n  //here I convert icon based on weather condition.........................\n  convertIcon = (icons, idRange) => {\n    switch (true) {\n      case idRange >= 200 && idRange <= 232:\n        this.setState({\n          icon:icons.Thunderstrom\n        })\n        break\n      case idRange >= 300 && idRange <= 321:\n        this.setState({\n          icon:icons.Drizzle\n        })\n        break\n      case idRange >= 500 && idRange <= 531:\n        this.setState({\n          icon:icons.Rain\n         })\n        break\n      case idRange >= 600 && idRange <= 622:\n        this.setState({\n          icon:icons.Snow\n        })\n        break\n      case idRange >= 701 && idRange <= 781:\n        this.setState({\n          icon:icons.Atmosphere\n        })\n        break\n      case idRange >= 801 && idRange <= 804:\n        this.setState({\n          icon:icons.Clouds\n        })\n        break\n      case idRange ===800:\n        this.setState({\n          icon:icons.Clear\n        })\n        break\n      default:\n        this.setState({\n          icon:icons.Clear\n        })\n    }\n  }\n  //fetching data by api call.................\n  fetchApi = async (event) => {\n    event.preventDefault();\n    const city = event.target.elements.city.value\n    const country = event.target.elements.country.value\n    //console.log(city)\n    //console.log(country)\n    if (city && country) {\n      const api_call = await axios(`http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${APIkey}`)\n      const response = api_call.data\n      console.log(response)\n      this.setState({\n        cityName: `${response.name}`,\n        countryName: `${response.sys.country}`,\n        celsius: this.convertCelcius(response.main.temp),\n        temp_min: this.convertCelcius(response.main.temp_min),\n        temp_max: this.convertCelcius(response.main.temp_max),\n        description: response.weather[0].description,\n        humidity:response.main.humidity,\n        error: false,\n        css:true\n      })\n      this.convertIcon(this.weatherIcon,response.weather[0].id)\n    } else {\n      this.setState({error:true})\n    }\n    }\n   \n  //rendering whole ui parts from here..................\n  render() {\n    return (\n      <div className=\"App\">\n        <WeatherInput loadData={this.fetchApi} error={this.state.error}/>\n        <WeatherReport\n          cityName={this.state.cityName}\n          countryName={this.state.countryName}\n          temp_celcius={this.state.celsius} temp_min={this.state.temp_min}\n          temp_max={this.state.temp_max} description={this.state.description}\n          weatherIcon={this.state.icon} humidity={this.state.humidity}\n          css={this.state.css}\n        />\n      </div>\n    )\n  }\n }\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}